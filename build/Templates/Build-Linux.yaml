# Build project for Mac

jobs:
- job: Build_Linux
  displayName: 'Build Linux'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self
    lfs: true
    submodules: true
    displayName: 'Checkout project'

  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '$(Agent.BuildDirectory)/s/src/rbfxSample.Desktop.sln'
      feedsToUse: 'select'
      vstsFeed: '$(VstsFeed)'
      includeNuGetOrg: true

  - task: MSBuild@1
    displayName: 'Build game'
    inputs:
      solution: '$(Agent.BuildDirectory)/s/src/rbfxSample.Desktop.sln'
      configuration: release

  - task: Bash@3
    displayName: 'mkbundle'
    inputs:
      targetType: inline
      script: |
        mkbundle -v --i18n all --deps rbfxSample.exe -o rbfxSample.linux --config $(Agent.BuildDirectory)/s/build/mkbundle/ubuntu.config --cross default --machine-config /etc/mono/4.5/machine.config -L . -L /usr/share/dotnet/sdk/NuGetFallbackFolder/netstandard.library/2.0.3/build/netstandard2.0/ref/ --library /usr/lib/libmono-native.so
      workingDirectory: $(Agent.BuildDirectory)/s/src/rbfxSample/bin/Release/net471
      failOnStderr: true

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Agent.BuildDirectory)/s/src/rbfxSample/bin/Release/net471'
      contents: 'rbfxSample.linux' 
      targetFolder: '$(Build.ArtifactStagingDirectory)/linux-bin'
      overWrite: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish game binaries'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/linux-bin'
      artifactName: 'linux-bin'
